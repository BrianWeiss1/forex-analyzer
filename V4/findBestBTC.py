import numpy as np
import random
import time
f = open("test2.txt", 'r')
# print(f.readlines())
dic = eval(f.readlines()[0])
f.close()

symbols = ["BTCUSDT", "ETHUSDT", "BNBUSDT", "XRPUSDT", "SOLUSDT", "ADAUSDT", "TRONUSDT", "LINKUSDT", "MATICUSDT"]
# symbols = ['BTCUSDT']
# symbol = symbol[random.randint(0, 8)]
# print(symbol)
# f = open('documents/binanceSymbols.txt', 'r')
# symbols = f.readlines()
# symbols = eval(symbols[0])
f.close()# print(dic)
lst = []
lstSymbols = []
for symbol in symbols:
    for keys in dic:
        values = dic[keys]
        for value in values:
            # print(value[0])
            if value[0] == symbol:
                lst.append([keys, value[1]])
                
    lst = sorted(lst, key=lambda x:x[1])
    # print(lst)
    lst = lst[0:26]
    sumTo = 0
    for i in range(len(lst)):
        sumTo+=lst[i][1]
    # print(sumTo)
    # print(lst)
    print(lst)
    print(symbol)
    lstSymbols.append([symbol, sumTo/len(lst)])
    # print(sumTo/len(lst))
    
f = open("anylsis.txt", 'w')
f.write(str(lst[0:26]))
f.close()
print(lstSymbols)
lstSymbols = sorted(lst, key=lambda x:x[1])

f = open("anylsis.txt", 'r')
val = f.readline()
counter = 0
while val:
    counter+=1
    print(f"stochRSIK{counter}, stochRSID{counter} = {val.strip()}")
    val = f.readline()
f.close()
# BTCUSD: [[75, -0.011143219840000001], [40, -0.01039015824], [15, -0.009781607360000001], [110, -0.008920913400000003], [111, -0.008920913400000003], [112, -0.008920913400000003], [2, -0.00854795736], [44, -0.008512569799999998], [66, -0.008510302679999998], [108, -0.008510302679999998], [12, -0.00838859164], [113, -0.00838859164], [52, -0.0083161155], [90, -0.00783495456], [33, -0.007779981], [63, -0.00775486712], [123, -0.00765971316], [49, -0.007616212000000002], [124, -0.007493960240000001], [23, -0.007454056079999998], [126, -0.007442085680000001], [20, -0.007438474999999999], [1, -0.0072598043999999974], [19, -0.0072598043999999974], [74, -0.0071568171]]
# lstOfSTOCH = [(366, 3, 1017), (161, 3, 316), (370, 3, 218), (459, 2, 251), (217, 5, 774), (527, 7, 482), (625, 11, 400), (664, 4, 265), (301, 7, 325), (264, 3, 159), (114, 3, 413), (217, 3, 343), (313, 6, 160), (304, 7, 253), (348, 7, 186), (348, 4, 445), (249, 4, 346), (649, 10, 425), (206, 4, 186), (161, 3, 316), (203, 7, 65), (307, 5, 186), (700, 4, 136), (306, 3, 152), (948, 2, 531), (547, 8, 517), (310, 6, 179), (433, 4, 155), (323, 5, 139), (278, 6, 157), (964, 3, 495), (282, 6, 275), (227, 6, 412), (295, 8, 179), (386, 15, 261), (236, 4, 219), (32, 1302, 876), (255, 298, 15), (1217, 138, 52), (686, 4, 984), (321, 7, 150), (10, 130, 148), (230, 20, 860), (401, 4, 272), (595, 4, 830), (886, 2, 551), (320, 10, 599), (401, 11, 223), (521, 9, 238), (544, 8, 466), (536, 7, 488), (327, 7, 697), (527, 8, 232), (545, 8, 459), (388, 6, 845), (356, 4, 205), (223, 2, 115), (91, 4, 62), (400, 9, 1085), (628, 3, 1044), (321, 11, 545), (329, 2, 166), (384, 4, 274), (379, 3, 216), (307, 3, 120), (938, 2, 543), (600, 5, 894), (336, 4, 457), (334, 5, 138), (554, 10, 461), (299, 8, 371), (329, 5, 140), (265, 7, 286), (335, 12, 298), (303, 3, 119), (322, 7, 153), (324, 6, 912), (120, 2, 133), (569, 10, 289), (374, 4, 337), (400, 4, 280), (511, 6, 623), (402, 4, 340), (377, 4, 333), (377, 4, 333), (517, 8, 268), (561, 2, 390), (413, 4, 267), (637, 10, 381), (355, 3, 203), (316, 2, 160), (535, 7, 488), (325, 6, 375), (411, 3, 239), (529, 7, 487), (327, 10, 923), (533, 8, 498), (298, 9, 367), (301, 8, 367), (488, 6, 652), (1081, 3, 724), (296, 5, 146), (687, 6, 890), (320, 10, 599), (296, 10, 374), (359, 8, 861), (966, 3, 732), (272, 7, 269), (600, 5, 894), (655, 11, 378), (545, 8, 465), (545, 8, 465), (545, 8, 465), (313, 6, 160), (320, 6, 142), (463, 6, 638), (690, 8, 890), (87, 5, 63), (523, 8, 564), (322, 9, 1246), (872, 5, 798), (872, 5, 798), (872, 5, 798), (1282, 3, 141), (307, 5, 440), (323, 14, 737), (869, 3, 761), (1309, 2, 146), (218, 22, 400), (441, 12, 593), (134, 2, 142), (1161, 4, 396), (107, 2, 294)]
# counter = 0
# for i in lst:
#     counter+=1
#     val1 = lstOfSTOCH[i[0]][0]
#     val2 = lstOfSTOCH[i[0]][1]
#     val3 = lstOfSTOCH[i[0]][2]

#     print(f"stochRSIK{counter}, stochRSID{counter} = get_StochasticRelitiveStrengthIndex(df, {val1}, {val2}, {val3})")
